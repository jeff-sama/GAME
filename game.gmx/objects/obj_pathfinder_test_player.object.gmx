<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = playerred;
image_speed = 0;
//x and y values to pathfind to
go_y = 0;
go_x = 0;
go_speed = 0; //speed to pathfind at
go_allowdiag = 0;

pathfind_allowdiag = 1;

posx = x; //if more than 10 away from these coordinates, will pathfind
posy = y;

onpath = false;
pathfind_x = x+32; //coordinates to use for the origin of the path
pathfind_y = x+32;

/* KNOWN PROBLEMS
1. Grid must be 64x64 for player to reliably move through it
2. Wallbits can be smaller than 64x64 so the pathfinding object will stay unnecessarily far away from some walls
3. Path must begin at the origin of the sprite for some reason (x,y). If I try setting it to say (x+32,y+32), things get fucky
4. Attempting to pathfind into a wall teleports the pathfinding object to 0,0.
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
depth = -y;
pathfind_x = x+32;
pathfind_y = y+32;

if (x-10 &gt; posx || x+10 &lt; posx || y-10 &gt; posy || y+10 &lt; posy){
    pathfind(posx,posy,6,pathfind_allowdiag);
    onpath = true;
}
else{
    onpath = false;
    pathfind_allowdiag = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boundary">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DESCRIPTION: Solves strange collision issues when landing or walking into a solid (ground or wall) for platformers
// CREDIT:  cantavanda @ gmc.yoyogames.com
// URL: http://gmc.yoyogames.com/index.php?showtopic=545531
// USE: Apply this script in Player -&gt; Collides With -&gt; Solid event
 
//CODE: 
 
if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
    pathfind_allowdiag = 0; //for pathfinding, if a wall is touched can no longer move diagonal until away from wall
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
    vspeed=0;
    pathfind_allowdiag = 0;
}
 
if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
    pathfind_allowdiag = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
